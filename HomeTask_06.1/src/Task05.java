/*
Король повинен вбити дракона, але в його скарбниці мало коштівдля покупки армії.
Використовуючи методи, створіть програму, яка допоможе підрахувати
мінімальну кількість копійщиків, з якою можливо вбитидракона. З клавіатури
вводяться наступні дані:
 здоров'я дракона;
 напади дракона;
 здоров'я одного копійщика;
 напад одного копійщика.
Захист, влучність і т. п., не враховувати. Копійщики наносять удар першими
(загальна завдана шкода — це сума атак усіх живих копійщиків). Якщо атака
дракона перевищує значення життя копійщика (наприклад, у копійщика життів
— 10, а нападів — 15), то вмирає кілька копійщиків, азавдані втрати переходять
одному з копійщиків.
Наприклад, життя дракона — 500, напад — 55; життя одного копійщика — 10, напад
— 10; кількість копійщиків принаведених умовах — 20.
Лог бою для даного прикладу має бути таким:
Ітерація 15
Копійщики нападають (збитки 200) — у дракона залишилося 300 життів.
Дракон нападає — залишилося 15 копійщиків, один з яких поранений (залишилося 5 життів).
Копійщики нападають — у дракона залишилося 150 життів. Дракон нападає — залишилося 9
копійщиків.
Копійщики нападають — у дракона залишилося 60 життів.
Дракон нападає — залишилося 4 копійщика, один з яких поранений (залишилося 5 життів).
Копійщики нападають — у дракона залишилося 20 життів. Дракон нападає і перемагає.
 */

import java.util.Scanner;

import java.util.Scanner;

import java.util.Scanner;

public class Task05 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Введення початкових значень
        System.out.print("Введіть початкове здоров'я дракона: ");
        int dragonHealth = scanner.nextInt();

        System.out.print("Введіть атаку дракона: ");
        int dragonAttack = scanner.nextInt();

        System.out.print("Введіть здоров'я одного копійщика: ");
        int copycatHealth = scanner.nextInt();

        System.out.print("Введіть атаку одного копійщика: ");
        int copycatAttack = scanner.nextInt();

        System.out.print("Введіть кількість копійщиків: ");
        int numCopycats = scanner.nextInt();

        // Логіка бою
        int round = 1;  // Лічильник раундів

        while (dragonHealth > 0 && numCopycats > 0) {
            // Копійщики атакують
            int totalDamageFromCopycats = numCopycats * copycatAttack;
            dragonHealth -= totalDamageFromCopycats;
            System.out.println("Ітерація " + round);
            System.out.println("Копійщики нападають (збитки " + totalDamageFromCopycats + ") — у дракона залишилося " + dragonHealth + " життів.");

            if (dragonHealth <= 0) {
                System.out.println("Дракон загинув! Копійщики перемогли.");
                break;
            }

            // Дракон атакує
            int totalDamageToCopycats = dragonAttack;
            int copycatsKilled = totalDamageToCopycats / copycatHealth;  // Вираховуємо, скільки копійщиків вбиває дракон за один удар
            numCopycats -= copycatsKilled;  // Зменшуємо кількість живих копійщиків
            if (numCopycats < 0) numCopycats = 0;  // Переконуємося, що кількість копійщиків не стає від'ємною

            System.out.println("Дракон нападає — залишилося " + numCopycats + " копійщиків.");
            round++;  // Переходимо до наступної ітерації
        }

        if (numCopycats == 0) {
            System.out.println("Копійщики загинули. Дракон переміг.");
        }

        scanner.close();  // Закриваємо сканер
    }
}
